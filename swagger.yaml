openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8090
  description: Generated server url
paths:
  /profile/teachers:
    get:
      tags:
      - profile-api
      operationId: getAllTeachers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeacherInfo'
    put:
      tags:
      - profile-api
      operationId: updateTeacher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Profile'
  /profile/students:
    get:
      tags:
      - profile-api
      operationId: getAllStudents
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentInfo'
    put:
      tags:
      - profile-api
      operationId: updateStudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Profile'
  /profile/admins:
    get:
      tags:
      - profile-api
      operationId: getAllAdmins
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminInfo'
    put:
      tags:
      - profile-api
      operationId: updateAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Profile'
  /registration/teacher:
    post:
      tags:
      - registration-api
      operationId: registerTeacher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Profile'
  /registration/student:
    post:
      tags:
      - registration-api
      operationId: registerStudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Profile'
  /registration/admin:
    post:
      tags:
      - registration-api
      operationId: registerAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationInfo'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Profile'
  /test:
    get:
      tags:
      - test-controller
      operationId: test
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /profile/teachers/{id}:
    get:
      tags:
      - profile-api
      operationId: getTeacher
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeacherInfo'
  /profile/students/{id}:
    get:
      tags:
      - profile-api
      operationId: getStudent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/StudentInfo'
  /profile/admins/{id}:
    get:
      tags:
      - profile-api
      operationId: getAdmin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdminInfo'
components:
  schemas:
    Attachment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fileName:
          type: string
        extension:
          type: string
          enum:
          - JPEG
          - PDF
        student:
          $ref: '#/components/schemas/Profile'
        deleted:
          type: boolean
        projects:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Project'
    Mark:
      type: object
      properties:
        id:
          type: integer
          format: int64
        project:
          $ref: '#/components/schemas/Project'
        student:
          $ref: '#/components/schemas/Profile'
        markValue:
          type: integer
          format: int32
        markTime:
          type: string
          format: date-time
        comment:
          type: string
        deleted:
          type: boolean
    MarkStep:
      type: object
      properties:
        id:
          type: integer
          format: int64
        owner:
          $ref: '#/components/schemas/Profile'
        title:
          type: string
        description:
          type: string
        maxMark:
          type: integer
          format: int32
        deleted:
          type: boolean
        tasks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Task'
    Name:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        patronymic:
          type: string
    Profile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
          writeOnly: true
        role:
          type: string
          enum:
          - ROLE_ADMIN
          - ROLE_TEACHER
          - ROLE_STUDENT
        name:
          $ref: '#/components/schemas/Name'
        studentGroup:
          type: string
        phoneNumber:
          type: string
        deleted:
          type: boolean
        attachments:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        rooms:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Room'
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
        student:
          $ref: '#/components/schemas/Profile'
        task:
          $ref: '#/components/schemas/Task'
        title:
          type: string
        description:
          type: string
        deleted:
          type: boolean
        marks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Mark'
        attachments:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    Room:
      required:
      - code
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        code:
          maxLength: 8
          minLength: 8
          type: string
        deleted:
          type: boolean
        teachers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Profile'
        students:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Profile'
        tasks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Task'
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        openDate:
          type: string
          format: date-time
        closeDate:
          type: string
          format: date-time
        room:
          $ref: '#/components/schemas/Room'
        deleted:
          type: boolean
        projects:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Project'
        markSteps:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MarkStep'
    RegistrationInfo:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        patronymic:
          type: string
        studentGroup:
          type: string
    TeacherInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        patronymic:
          type: string
    StudentInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        patronymic:
          type: string
        studentGroup:
          type: string
    AdminInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        patronymic:
          type: string
